{
    "openapi": "3.0.0",
    "info": {
        "title": "Xpart App OpenApi API Documentation",
        "description": "Xpart App Using L5 Swagger OpenApi description",
        "contact": {
            "email": "schneidershades@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin/statistics": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "statistics",
                "description": "statistics",
                "operationId": "statistics",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/markup-pricing": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all markup-pricing",
                "description": "Get all markup-pricing",
                "operationId": "allMarkupPricing",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Post markup-pricing",
                "description": "Post markup-pricing",
                "operationId": "postUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarkupPricingCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/markup-pricing/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Show markup-pricing",
                "description": "Show markup-pricing",
                "operationId": "showMarkupPricing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "markup-pricing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update markup-pricing",
                "description": "Update markup-pricing",
                "operationId": "UserMarkupPricing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "markup-pricing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarkupPricingUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete markup-pricing",
                "description": "Delete markup-pricing",
                "operationId": "deleteMarkupPricing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "markup-pricing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/orders": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allOrders",
                "description": "allOrders",
                "operationId": "allOrders",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/orders/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showOrders",
                "description": "showOrders",
                "operationId": "showOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order Receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/parts": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "getParts",
                "description": "getParts",
                "operationId": "allParts",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/part": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "postPart",
                "description": "postPart",
                "operationId": "postPart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/part/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showPart",
                "description": "showPart",
                "operationId": "showPart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showPart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updatePart",
                "description": "updatePart",
                "operationId": "updatePart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updatePart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "deletePart",
                "description": "deletePart",
                "operationId": "deletePart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "deletePart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/part-grades": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allPartGrades",
                "description": "allPartGrades",
                "operationId": "allPartGrades",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/part-specialization": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allPartSpecialization",
                "description": "allPartSpecialization",
                "operationId": "allPartSpecialization",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "postPartSpecialization",
                "description": "postPartSpecialization",
                "operationId": "postPartSpecialization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartSpecializationCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/part-specialization/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showVehicleSpecialization",
                "description": "showVehicleSpecialization",
                "operationId": "showVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateVehicleSpecialization",
                "description": "updateVehicleSpecialization",
                "operationId": "updateVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PartSpecializationUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "deleteVehicleSpecialization",
                "description": "deleteVehicleSpecialization",
                "operationId": "deleteVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "deleteVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/payment-charges": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allPaymentCharge",
                "description": "allPaymentCharge",
                "operationId": "allPaymentCharge",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/payment-methods": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allPaymentMethods",
                "description": "allPaymentMethods",
                "operationId": "allPaymentMethods",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/quotes": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allQuotes",
                "description": "allQuotes",
                "operationId": "allQuotes",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/quotes/{id}": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateQuotes",
                "description": "updateQuotes",
                "operationId": "updateQuotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateQuotes ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminQuoteUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/roles": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all roles",
                "description": "Get all roles",
                "operationId": "allRoles",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Post roles",
                "description": "Post roles",
                "operationId": "postRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/roles/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Show role",
                "description": "Show role",
                "operationId": "showRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update role",
                "description": "Update role",
                "operationId": "RoleUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete role",
                "description": "Delete role",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users",
                "description": "Get all users",
                "operationId": "allUsers",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Post users",
                "description": "Post users",
                "operationId": "postUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/users/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Show user",
                "description": "Show user",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update user",
                "description": "Update user",
                "operationId": "UserUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete user",
                "description": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vehicle-specialization": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allVehicleSpecialization",
                "description": "allVehicleSpecialization",
                "operationId": "allVehicleSpecialization",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "postVehicleSpecialization",
                "description": "postVehicleSpecialization",
                "operationId": "postVehicleSpecialization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleSpecializationCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vehicle-specialization/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showVehicleSpecialization",
                "description": "showVehicleSpecialization",
                "operationId": "showVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateVehicleSpecialization",
                "description": "updateVehicleSpecialization",
                "operationId": "updateVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleSpecializationUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "deleteVehicleSpecialization",
                "description": "deleteVehicleSpecialization",
                "operationId": "deleteVehicleSpecialization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "deleteVehicleSpecialization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vendors": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all vendors",
                "description": "Get all vendors",
                "operationId": "allVendors",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Post vendors",
                "description": "Post vendors",
                "operationId": "postVendors",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vendors/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Show vendor",
                "description": "Show vendor",
                "operationId": "showVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendor ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update Vendor",
                "description": "Update Vendor",
                "operationId": "VendorUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendor ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Vendor",
                "description": "Delete Vendor",
                "operationId": "deleteVendor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendor ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vins": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "getVins",
                "description": "getVins",
                "operationId": "allVins",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vin": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "postVin",
                "description": "postVin",
                "operationId": "postVin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VinCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/vin/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showVin",
                "description": "showVin",
                "operationId": "showVin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showVin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateVin",
                "description": "updateVin",
                "operationId": "updateVin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateVin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VinUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "deleteVin",
                "description": "deleteVin",
                "operationId": "deleteVin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "deleteVin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/wallet-transactions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allWalletTransactions",
                "description": "allWalletTransactions",
                "operationId": "allWalletTransactions",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/wallet-transactions/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showWalletTransactions",
                "description": "showWalletTransactions",
                "operationId": "showWalletTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "WalletTransactions Receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateWalletTransactions",
                "description": "updateWalletTransactions",
                "operationId": "updateWalletTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "WalletTransactions Receipt Number ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminWalletUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/withdrawals": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allWithdrawals",
                "description": "allWithdrawals",
                "operationId": "allWithdrawals",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/withdrawals/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showWithdrawals",
                "description": "showWithdrawals",
                "operationId": "showWithdrawals",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "showWithdrawals Receipt number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateWithdrawals",
                "description": "updateWithdrawals",
                "operationId": "updateWithdrawals",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateWithdrawals Receipt Number ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminWithdrawalsUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/xpart-requests": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "allXpartRequest",
                "description": "allXpartRequest",
                "operationId": "allXpartRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admin/xpart-requests/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Show XpartRequest",
                "description": "Show XpartRequest",
                "operationId": "showXpartRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "XpartRequest ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "updateXpartRequest",
                "description": "updateXpartRequest",
                "operationId": "updateXpartRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "updateXpartRequest ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminXpartRequestUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/change/password": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "change password for user",
                "description": "change password of registered user data",
                "operationId": "changepassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful password change",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/password/email": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "reset a registered user password",
                "description": "Returns a registered user reset email",
                "operationId": "sendResetMailForgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/auth/password/reset": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "reset a registered user password",
                "description": "Returns a registered user reset email",
                "operationId": "resetPasswordFromToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Sign Up a new user",
                "description": "Returns a newly registered user data",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signup",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Sign In a registered user",
                "description": "Returns a newly registered user data",
                "operationId": "signIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/auth/profile": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh/token": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh a registered user token",
                "description": "Refresh a registered user token",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Logout a registered user",
                "description": "Logout a registered user",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/email/resend": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Verify email of a registered user",
                "description": "Verify email of a registered user",
                "operationId": "userResendVerifyEmail",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/email/verify/{id}/{hash}?expires={expires}&signature={signature}": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userVerify",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "path",
                        "description": "signature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "path",
                        "description": "expires",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cart": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "cart",
                "description": "cart",
                "operationId": "cart",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "postCart",
                "description": "postCart",
                "operationId": "postCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cart/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "updateCart",
                "description": "updateCart",
                "operationId": "updateCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "deleteCart",
                "description": "deleteCart",
                "operationId": "deleteCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/empty-cart": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "emptyCart",
                "description": "emptyCart",
                "operationId": "emptyCart",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "orders",
                "description": "orders",
                "operationId": "orders",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "postOrders",
                "description": "postOrders",
                "operationId": "postOrders",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "showOrders",
                "description": "showOrders",
                "operationId": "showOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "updateOrders",
                "description": "updateOrders",
                "operationId": "updateOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/addresses": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allAddresses",
                "description": "allAddresses",
                "operationId": "allAddresses",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shared"
                ],
                "summary": "postAddresses",
                "description": "postAddresses",
                "operationId": "postAddresses",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/addresses/{id}": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "showAddresses",
                "description": "showAddresses",
                "operationId": "showAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shared"
                ],
                "summary": "updateAddresses",
                "description": "updateAddresses",
                "operationId": "updateAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shared"
                ],
                "summary": "deleteAddresses",
                "description": "deleteAddresses",
                "operationId": "deleteAddresses",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/banks": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allBanks",
                "description": "allBanks",
                "operationId": "allBanks",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/bank-details": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allBankDetails",
                "description": "allBankDetails",
                "operationId": "allBankDetails",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shared"
                ],
                "summary": "postBankDetails",
                "description": "postBankDetails",
                "operationId": "postBankDetails",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankDetailCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/bank-details/{id}": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "showBankDetails",
                "description": "showBankDetails",
                "operationId": "showBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shared"
                ],
                "summary": "updateBankDetails",
                "description": "updateBankDetails",
                "operationId": "updateBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shared"
                ],
                "summary": "deleteBankDetails",
                "description": "deleteBankDetails",
                "operationId": "deleteBankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BankDetails ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/countries": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get all countries",
                "description": "Get all countries",
                "operationId": "allCountries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/shared/countries/{id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get details of country by id with attached states",
                "description": "Get country with states in a country",
                "operationId": "countryID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/shared/part-grade": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allPartGrade",
                "description": "allPartGrade",
                "operationId": "allPartGrade",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/part-specialization": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "partSpecialization",
                "description": "partSpecialization",
                "operationId": "partSpecialization",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/parts?search={name}&per_page={per_page}": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "searchParts",
                "description": "searchParts",
                "operationId": "searchParts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Search Items",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "path",
                        "description": "Number per page",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/payment-methods": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "paymentMethods",
                "description": "paymentMethods",
                "operationId": "paymentMethods",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/shared/states/{id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get all cities in a state",
                "description": "Get all cities in a state",
                "operationId": "state_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/shared/vehicle-specialization": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allVehicleSpecialization",
                "description": "allVehicleSpecialization",
                "operationId": "allVehicleSpecialization",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/check-vin": {
            "post": {
                "tags": [
                    "Shared"
                ],
                "summary": "checkVin",
                "description": "checkVin",
                "operationId": "checkVin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VinCheckerFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/funds": {
            "post": {
                "tags": [
                    "Shared"
                ],
                "summary": "postFunds",
                "description": "postFunds",
                "operationId": "postFunds",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FundCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/funds/{id}": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "showFunds",
                "description": "showFunds",
                "operationId": "showFunds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Xpart Request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shared"
                ],
                "summary": "updateFunds",
                "description": "updateFunds",
                "operationId": "updateFunds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Addresses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FundUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/wallet-transactions": {
            "get": {
                "tags": [
                    "Shared"
                ],
                "summary": "allWalletTransactions",
                "description": "allWalletTransactions",
                "operationId": "allWalletTransactions",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/shared/wallet-transactions/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "showWalletTransactions",
                "description": "showWalletTransactions",
                "operationId": "showWalletTransactions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Xpart Request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/v1/shared/withdrawals": {
            "post": {
                "tags": [
                    "Shared"
                ],
                "summary": "postWithdrawals",
                "description": "postWithdrawals",
                "operationId": "postWithdrawals",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WithdrawalCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor-quote/{xpart_requests_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "showQuotesUnderXpartRequest",
                "description": "showQuotesUnderXpartRequest",
                "operationId": "showQuotesUnderXpartRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Xpart Request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/xpart-requests": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "allXpartRequest",
                "description": "allXpartRequest",
                "operationId": "allXpartRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "postXpartRequests",
                "description": "postXpartRequests",
                "operationId": "postXpartRequests",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/XpartCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/xpart-requests/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "showXpartRequests",
                "description": "showXpartRequests",
                "operationId": "showXpartRequests",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Xpart Request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/business-details": {
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "postVendorBusinessDetails",
                "description": "postVendorBusinessDetails",
                "operationId": "postVendorBusinessDetails",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetailCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/quotes": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "allQuotes",
                "description": "allQuotes",
                "operationId": "allUsers",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vendor"
                ],
                "summary": "postQuotes",
                "description": "postQuotes",
                "operationId": "postQuotes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuoteCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/quotes/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "showQuotes",
                "description": "showQuotes",
                "operationId": "showQuotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vendor"
                ],
                "summary": "deleteQuotes",
                "description": "deleteQuotes",
                "operationId": "deleteQuotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Quote ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/others/quotes": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "othersQuotes",
                "description": "othersQuotes",
                "operationId": "othersQuotes",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/assigned-xpart-requests": {
            "get": {
                "tags": [
                    "Vendor"
                ],
                "summary": "allAssignedXpartRequest",
                "description": "allAssignedXpartRequest",
                "operationId": "allAssignedXpartRequest",
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vendor/assigned-xpart-requests/{id}": {
            "delete": {
                "tags": [
                    "Vendor"
                ],
                "summary": "deleteAssignedXpartRequest",
                "description": "deleteAssignedXpartRequest",
                "operationId": "deleteAssignedXpartRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Assigned ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful signin",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AddressCreateFormRequest": {
                "title": "Address Create Form Request Fields",
                "description": "Address Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "postal_code": {
                        "title": "User postal_code",
                        "description": "postal_code of the user",
                        "type": "string",
                        "example": "900233"
                    },
                    "country_id": {
                        "title": "User Country",
                        "description": "country of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "User State",
                        "description": "state of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "primary_address": {
                        "title": "User primary address",
                        "description": "primary address of the user",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "AddressUpdateFormRequest": {
                "title": "Address Update Form Request Fields",
                "description": "Address Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "postal_code": {
                        "title": "User postal_code",
                        "description": "postal_code of the user",
                        "type": "string",
                        "example": "900233"
                    },
                    "country_id": {
                        "title": "User Country",
                        "description": "country of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "User State",
                        "description": "state of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "primary_address": {
                        "title": "User primary address",
                        "description": "primary address of the user",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "AdminQuoteUpdateFormRequest": {
                "title": "Admin Quote Update Form Request Fields",
                "description": "Admin Quote Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "approve/decline"
                    }
                },
                "type": "object"
            },
            "AdminWalletUpdateFormRequest": {
                "title": "Admin Wallet Update Form Request Fields",
                "description": "Admin Wallet Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "approve/decline"
                    }
                },
                "type": "object"
            },
            "AdminWithdrawalsUpdateFormRequest": {
                "title": "Admin Withdrawals Update Form Request Fields",
                "description": "Admin Withdrawals Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "approve/decline"
                    }
                },
                "type": "object"
            },
            "AdminXpartRequestUpdateFormRequest": {
                "title": "Admin XpartRequest Update Form Request Fields",
                "description": "Admin XpartRequest Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "status": {
                        "title": "status",
                        "description": "status",
                        "type": "string",
                        "example": "approve/decline"
                    }
                },
                "type": "object"
            },
            "MarkupPricingCreateFormRequest": {
                "title": "Markup Pricing Create Form Request Fields",
                "description": "Markup Pricing Create request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "min_value": {
                        "title": "Max Value",
                        "description": "Maximum Value of the Price",
                        "type": "string",
                        "example": "10000.00"
                    },
                    "max_value": {
                        "title": "Min Value",
                        "description": "Minimum Value of the Price",
                        "type": "string",
                        "example": "100000.00"
                    },
                    "percentage": {
                        "title": "Percentage Value",
                        "description": "Percentage Value of the Price",
                        "type": "string",
                        "example": "100"
                    },
                    "type": {
                        "title": "Markup Type",
                        "description": "Type of the Price",
                        "type": "boolean",
                        "example": "quotes"
                    }
                },
                "type": "object"
            },
            "MarkupPricingUpdateFormRequest": {
                "title": "Markup Pricing Update Form Request Fields",
                "description": "Markup Pricing Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "min_value": {
                        "title": "Max Value",
                        "description": "Maximum Value of the Price",
                        "type": "string",
                        "example": "10000.00"
                    },
                    "max_value": {
                        "title": "Min Value",
                        "description": "Minimum Value of the Price",
                        "type": "string",
                        "example": "100000.00"
                    },
                    "percentage": {
                        "title": "Percentage Value",
                        "description": "Percentage Value of the Price",
                        "type": "string",
                        "example": "100"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status of the Price",
                        "type": "string",
                        "example": "inactive/active"
                    },
                    "type": {
                        "title": "Markup Type",
                        "description": "Type of the Price",
                        "type": "boolean",
                        "example": "quotes"
                    }
                },
                "type": "object"
            },
            "PartCreateFormRequest": {
                "title": "Part Create Form Request Fields",
                "description": "Part Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "PartSpecializationCreateFormRequest": {
                "title": "Part Specialization Create Form Request Fields",
                "description": "Part Specialization Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "PartSpecializationUpdateFormRequest": {
                "title": "Part Specialization Update Form Request Fields",
                "description": "Part Specialization Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "PartUpdateFormRequest": {
                "title": "Part Update Form Request Fields",
                "description": "Part Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "RoleCreateFormRequest": {
                "title": "Role Create Form Request Fields",
                "description": "Role Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "RoleUpdateFormRequest": {
                "title": "Role Update Form Request Fields",
                "description": "Role Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UserCreateFormRequest": {
                "title": "User Create Form Request Fields",
                "description": "User Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "UserUpdateFormRequest": {
                "title": "User Update Form Request Fields",
                "description": "User Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "VehicleSpecializationCreateFormRequest": {
                "title": "Vehicle Specialization Create Form Request Fields",
                "description": "Vehicle Specialization Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "VehicleSpecializationUpdateFormRequest": {
                "title": "Vehicle Specialization Update Form Request Fields",
                "description": "Vehicle Specialization Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "VinCreateFormRequest": {
                "title": "Vin  Create Form Request Fields",
                "description": "Vin Create request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "VinUpdateFormRequest": {
                "title": "Vin  Update Form Request Fields",
                "description": "Vin Update request body data",
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "AuthUpdateFormRequest": {
                "title": "User Update Form Request Fields",
                "description": "User Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "ChangePasswordFormRequest": {
                "title": "Change password Update Form Request Fields",
                "description": "Change password Update request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "current_password": {
                        "title": "User Current  password",
                        "description": " Current Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "password": {
                        "title": "User New  password",
                        "description": " New Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@convertscript.com"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User reset email",
                        "description": "Reset email of the user",
                        "type": "string",
                        "example": "info@convertscript.com"
                    },
                    "token": {
                        "title": "User token email",
                        "description": "token email of the user",
                        "type": "string",
                        "example": "nciwo3939320393dweiodwe"
                    },
                    "password": {
                        "title": "new user password",
                        "description": "new password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "retype user password",
                        "description": "nretype new password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "UserLoginFormRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "user@xparts.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "UserRegistrationFormRequest": {
                "title": "Sign Up Form Request Fields",
                "description": "sign up request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "User Name",
                        "description": "name of the user",
                        "type": "string",
                        "example": "Schneider"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "user@xparts.com"
                    },
                    "phone": {
                        "title": "User phone",
                        "description": "phone of the user",
                        "type": "string",
                        "example": "234"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "role": {
                        "title": "User Role",
                        "description": "User/Vendor",
                        "type": "string",
                        "example": "User"
                    }
                },
                "type": "object"
            },
            "BankDetailCreateFormRequest": {
                "title": "Bank Details Create Form Request Fields",
                "description": "Bank Details Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "bank_id": {
                        "title": "Bank ID",
                        "description": "Bank ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "bank_account_name": {
                        "title": "Bank Account Name",
                        "description": "Bank Account Name",
                        "type": "string",
                        "example": "quote"
                    },
                    "bank_account_number": {
                        "title": "Bank Account Number",
                        "description": "Bank Account Number",
                        "type": "string",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "BankDetailUpdateFormRequest": {
                "title": "Bank Details Update Form Request Fields",
                "description": "Bank Details Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "bank_account_name": {
                        "title": "Bank Account Name",
                        "description": "Bank Account Name",
                        "type": "string",
                        "example": "quote"
                    },
                    "bank_account_number": {
                        "title": "Bank Account Number",
                        "description": "Bank Account Number",
                        "type": "string",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "CartCreateFormRequest": {
                "title": "Cart Create Form Request Fields",
                "description": "Cart Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "cartable_id": {
                        "title": "Model ID",
                        "description": "Model ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "cartable_type": {
                        "title": "Model Type",
                        "description": "Model Type",
                        "type": "string",
                        "example": "quotes"
                    }
                },
                "type": "object"
            },
            "CartUpdateFormRequest": {
                "title": "Cart Update Form Request Fields",
                "description": "Cart Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "quantity": {
                        "title": "Quantity",
                        "description": "Quantity",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "OrderCreateFormRequest": {
                "title": "Order Create Form Request Fields",
                "description": "Order Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "address_id": {
                        "title": "User Address id",
                        "description": "Address ID of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "cart": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "itemable_id": {
                                    "type": "int",
                                    "example": "1"
                                },
                                "itemable_type": {
                                    "type": "string",
                                    "example": "quotes"
                                },
                                "quantity": {
                                    "type": "int",
                                    "example": "1"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "orderable_id": {
                        "title": "Orderable id",
                        "description": "Address ID of this transaction",
                        "type": "integer",
                        "example": "1"
                    },
                    "orderable_type": {
                        "title": "Orderable type",
                        "description": "Orderable type of this transaction",
                        "type": "integer",
                        "example": "1"
                    },
                    "payment_method_id": {
                        "title": "Payment Method id",
                        "description": "Payment Method ID of this transaction",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "OrderUpdateFormRequest": {
                "title": "Order Update Form Request Fields",
                "description": "Order Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "payment_reference": {
                        "title": "Order payment reference",
                        "description": "Order payment reference",
                        "type": "string",
                        "example": "quote"
                    },
                    "payment_method_id": {
                        "title": "Order payment method id",
                        "description": "Order payment method id",
                        "type": "string",
                        "example": "quote"
                    },
                    "payment_gateway": {
                        "title": "Order payment gateway",
                        "description": "Order payment gateway",
                        "type": "string",
                        "example": "quote"
                    },
                    "order_id": {
                        "title": "Order ID ",
                        "description": "Order Id ",
                        "type": "integer",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "VinCheckerFormRequest": {
                "title": "VIN Checker Form Request Fields",
                "description": "VIN Checker Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "vin_number": {
                        "title": "VIN Number",
                        "description": "VIN number",
                        "type": "string",
                        "example": "5TDZA22C14S086770"
                    }
                },
                "type": "object"
            },
            "XpartCreateFormRequest": {
                "title": "Xpart Request Create Form Request Fields",
                "description": "Xpart Request Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "part": {
                        "title": "Xpart Part name",
                        "description": "Xpart Part name",
                        "type": "string",
                        "example": "seatbelt holder"
                    },
                    "vin_number": {
                        "title": "Vin Number",
                        "description": "Vin Number ID",
                        "type": "string",
                        "example": "48938484803390"
                    }
                },
                "type": "object"
            },
            "DetailCreateFormRequest": {
                "title": "Details Create Form Request Fields",
                "description": "Details Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "part_specialization_id": {
                        "title": "Part Specalization ID",
                        "description": "Part Specalization ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "vehicle_specialization_id": {
                        "title": "Vehicle Specalization ID",
                        "description": "Vehicle Specalization ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "country_id": {
                        "title": "Country ID",
                        "description": "Country ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "State ID",
                        "description": "State ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "City ID",
                        "description": "City ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "bank_id": {
                        "title": "Bank ID",
                        "description": "Bank ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "Business Name",
                        "description": "Business Name",
                        "type": "string",
                        "example": "Okonjo and sons limited"
                    },
                    "address": {
                        "title": "Business Address",
                        "description": "Business Address",
                        "type": "string",
                        "example": "quote"
                    },
                    "type": {
                        "title": "Business Type",
                        "description": "Business Type",
                        "type": "string",
                        "example": "Business"
                    },
                    "bank_account_name": {
                        "title": "Bank Account Name",
                        "description": "Bank Account Name",
                        "type": "string",
                        "example": "Michael Ogbuma"
                    },
                    "bank_account_number": {
                        "title": "Bank Account Number",
                        "description": "Bank Account Number",
                        "type": "string",
                        "example": "02933311112"
                    }
                },
                "type": "object"
            },
            "QuoteCreateFormRequest": {
                "title": "Quote Create Form Request Fields",
                "description": "Quote Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "xpart_request_id": {
                        "title": "Xpart Request Id",
                        "description": "Xpart Request Id",
                        "type": "string",
                        "example": "1"
                    },
                    "part_grade_id": {
                        "title": "Part Grade Id",
                        "description": "Part Grade Id",
                        "type": "string",
                        "example": "1"
                    },
                    "state_id": {
                        "title": "User State",
                        "description": "state of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "string",
                        "example": "1"
                    },
                    "quantity": {
                        "title": "Quantity",
                        "description": "Quantity of the part",
                        "type": "string",
                        "example": "1"
                    },
                    "part_number": {
                        "title": "Part Number",
                        "description": "Number of the Part",
                        "type": "string",
                        "example": "XXEREIR#11239"
                    },
                    "part_warranty": {
                        "title": "Part Warranty",
                        "description": "Warranty of the Part",
                        "type": "integer",
                        "example": "1"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price of part",
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the part",
                        "type": "string",
                        "example": "It is good"
                    },
                    "brand": {
                        "title": "Brand",
                        "description": "Brand of the part",
                        "type": "string",
                        "example": "LG"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "images": {
                                    "type": "string",
                                    "example": "https://"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "FundCreateFormRequest": {
                "title": "Fund Create Form Request Fields",
                "description": "Fund Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "amount": {
                        "title": "Fund amount",
                        "description": "Fund amount ",
                        "type": "integer",
                        "example": "10000"
                    }
                },
                "type": "object"
            },
            "FundUpdateFormRequest": {
                "title": "Fund Update Form Request Fields",
                "description": "Fund Update Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "payment_method_id": {
                        "title": "payment method id",
                        "description": "payment method",
                        "type": "integer",
                        "example": "1"
                    },
                    "orderable_id": {
                        "title": "Orderable id",
                        "description": "Orderable Id",
                        "type": "integer",
                        "example": "1"
                    },
                    "orderable_type": {
                        "title": "Orderable type",
                        "description": "Orderable type",
                        "type": "integer",
                        "example": "walletTransactions"
                    },
                    "payment_reference": {
                        "title": "Order payment reference",
                        "description": "Order payment reference",
                        "type": "string",
                        "example": "quote"
                    },
                    "payment_gateway": {
                        "title": "Order payment gateway",
                        "description": "Order payment gateway",
                        "type": "string",
                        "example": "quote"
                    }
                },
                "type": "object"
            },
            "WithdrawalCreateFormRequest": {
                "title": "Withdrawal Create Form Request Fields",
                "description": "Withdrawal Create Form request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "amount": {
                        "title": "Withdrawal amount",
                        "description": "Withdrawal amount ",
                        "type": "integer",
                        "example": "1000"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Xpart Application",
            "description": "API Endpoints of Projects"
        }
    ],
    "security": [
        []
    ]
}